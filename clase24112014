EJERCICIO NO. 1 Thread simple que mande el nombre cada 6 segundos.

package threads;

/**
 * @author T107
 */
public class Threads {
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        
        Thread t1=new Thread(new Runnable(){
            @Override
            public void run(){
                try{
                    Thread.sleep(6000);
                    System.out.println("Hola me llamo"+Thread.currentThread().getName()+" y me dormi 6 segundos");
                    
                }catch(Exception e){}
            }
                   
        });
        t1.start();
        // TODO code application logic here
    }
    
}


**************************************************************************************

EJERCICIO NO. 2 Thread siomple que se duerma 3 segundos y que imprima su nombre.








**************************************************************************************

EJERCICIO NO.3 Al thread anterior convertirlo en un thread de fondo (siempre Trabaja) y que hasta el final de los tiempos imprima cada 3 segundos el mensaje

package threads;

/**
 * @author T107
 */
public class Threads {
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        
        Thread t1=new Thread(new Runnable(){
            @Override
            public void run(){
                while(true){
                try{
                    Thread.sleep(6000);
                    System.out.println("Hola me llamo"+Thread.currentThread().getName()+" y me dormi 6 segundos");
                    
                }catch(Exception e){}
            }
            }      
        });
        t1.start();
        // TODO code application logic here
    }
    
}

**************************************************************************************

Ejercicio no. 3 Al Thread anterior convertirlo a un reloj digital y que imprima la hora al segundo

package threads;

import java.util.Calendar;

/**
 * @author T107
 */
public class Threads {
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        
        Thread t1=new Thread(new Runnable(){
            @Override
            public void run(){
                while(true){
                try{
                    Calendar cal=Calendar.getInstance();
                    int hora=cal.get(Calendar.HOUR_OF_DAY);
                    int min=cal.get(Calendar.MINUTE);
                    int seg=cal.get(Calendar.SECOND);
                    System.out.println(hora+":"+min+":"+seg);
                   Thread.sleep(1000);
              }catch(Exception e){}
            }
            }      
        });
        System.out.println("Esto es solo el metodo main");
        t1.start();
        // TODO code application logic here
    }
    
}



**************************************************************************************


EJERCICIO 5. EN EL JPANEL AGREGAR OTRO JLABEL Y PONER UNA IMAGEN DE TU AGRADO
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package threads;
import java.util.Calendar;

/**
 *
 * @author T107
 */
public class Relojito extends javax.swing.JFrame {

    /**
     * Creates new form Relojito
     */
    public Relojito() {
        initComponents();
          Thread t1=new Thread(new Runnable(){
            @Override
            public void run(){
                while(true){
                try{
                    Calendar cal=Calendar.getInstance();
                    int hora=cal.get(Calendar.HOUR_OF_DAY);
                    int min=cal.get(Calendar.MINUTE);
                    int seg=cal.get(Calendar.SECOND);
                    jLabel2.setText(hora+":"+min+":"+seg);
                   Thread.sleep(1000);
              }catch(Exception e){}
            }
            }      
        });
                t1.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 102));

        jLabel2.setFont(new java.awt.Font("Tekton Pro Cond", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(496, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(207, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Relojito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Relojito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Relojito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Relojito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Relojito().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration                   
}



*****************************************************************************************************************

SIGUIENTE TEMA COLLECTIONS
